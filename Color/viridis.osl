shader viridis(
  float Fac = 0.0,
  float Gamma = 2.2,
  output color Color = 0.0) {

  if(Fac <= 0.0) {
    Color = pow(color(0.266667, 0.003922, 0.329412), Gamma);
    return;
  }

  if(Fac >= 1.0) {
    Color = pow(color(0.992157, 0.905882, 0.145098), Gamma);
    return;
  }

  color arr[16] = { 
    color(0.266667, 0.003922, 0.329412), // #440154,
    color(0.282353, 0.100131, 0.420654), // #481A6B,
    color(0.276078, 0.184575, 0.487582), // #462F7C,
    color(0.254902, 0.265882, 0.527843), // #414487,

    color(0.221961, 0.340654, 0.549281), // #39578C,
    color(0.192157, 0.405229, 0.554248), // #31678D,
    color(0.164706, 0.469804, 0.556863), // #2A788E,
    color(0.139869, 0.534379, 0.553464), // #24888D,

    color(0.122092, 0.595033, 0.543007), // #1F988A,
    color(0.139608, 0.658039, 0.516863), // #24A884,
    color(0.210458, 0.717647, 0.471895), // #36B778,
    color(0.326797, 0.773595, 0.407582), // #53C568,

    color(0.477647, 0.821961, 0.316863), // #7AD251,
    color(0.648366, 0.858039, 0.208889), // #A5DB35,
    color(0.825098, 0.884967, 0.114771), // #D2E21D,
    color(0.992157, 0.905882, 0.145098)  // #FDE725
  };

  float scaledStep = Fac * 15.0;
  int i = int(scaledStep);
  Color = pow(mix(arr[i], arr[i + 1], scaledStep - i), Gamma);
}